name: Build Pulse24Sync

on:
  push:
    branches: [ main, fix-ci ]
  pull_request:
    branches: [ main ]

jobs:
  build-linux:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Linux with Docker and CMake
        run: |
          # Create a Dockerfile for the build environment
          cat > Dockerfile << 'EOF'
          FROM ubuntu:24.04

          # Install dependencies
          RUN apt-get update && apt-get install -y \
            build-essential \
            cmake \
            git \
            libasound2-dev \
            libjack-jackd2-dev \
            libfreetype6-dev \
            libcurl4-openssl-dev \
            libwebkit2gtk-4.1-dev \
            libgtk-3-dev \
            libx11-dev \
            libxrandr-dev \
            libxinerama-dev \
            libxcursor-dev \
            libxi-dev \
            pkg-config \
            && rm -rf /var/lib/apt/lists/*

          # Set working directory
          WORKDIR /workspace

          # Copy project files
          COPY . .

          # Clone JUCE
          RUN git clone https://github.com/juce-framework/JUCE.git && \
              cd JUCE && \
              git checkout 7.0.12

          # Create build directory and build with CMake
          RUN mkdir -p build && \
              cd build && \
              cmake .. -DCMAKE_BUILD_TYPE=Release \
                -DJUCE_BUILD_EXTRAS=OFF \
                -DJUCE_BUILD_EXAMPLES=OFF \
                -DJUCE_ENABLE_MODULE_SOURCE_GROUPS=ON && \
              make -j$(nproc)

          # Keep container running to copy artifacts
          CMD ["tail", "-f", "/dev/null"]
          EOF

          # Build and run the Docker container
          docker build -t pulse24sync-build .
          docker run -d --name build-container pulse24sync-build tail -f /dev/null

          # Copy build artifacts from container
          docker cp build-container:/workspace/build ./linux-builds

          # Clean up
          docker stop build-container
          docker rm build-container

      - name: Upload Linux build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-builds
          path: linux-builds/

  build-macos:
    runs-on: macos-14
    if: false  # Disabled - set to true to enable
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JUCE and Projucer
        run: |
          # Clone JUCE if not cached
          if [ ! -d "JUCE" ]; then
            git clone https://github.com/juce-framework/JUCE.git
            cd JUCE
            git checkout 7.0.12
            cd ..
          fi

          # Build Projucer if not cached
          if [ ! -f "JUCE/extras/Projucer/Builds/MacOSX/build/Release/Projucer.app/Contents/MacOS/Projucer" ]; then
            cd JUCE/extras/Projucer/Builds/MacOSX
            xcodebuild -project Projucer.xcodeproj -configuration Release
            cd ../../..
          fi

          # Generate Xcode project with Projucer
          ./JUCE/extras/Projucer/Builds/MacOSX/build/Release/Projucer.app/Contents/MacOS/Projucer --resave Pulse24Sync.jucer

          # Build the project
          xcodebuild -project Builds/MacOSX/Pulse24Sync.xcodeproj -configuration Release -scheme Pulse24Sync

      - name: Upload macOS build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-builds
          path: Builds/MacOSX/build/Release/

  build-windows:
    runs-on: Windows
    if: true  # Disabled - set to true to enable
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JUCE and Projucer
        shell: pwsh
        run: |
          # Clone JUCE if not cached
          if (!(Test-Path "JUCE")) {
            git clone https://github.com/juce-framework/JUCE.git
            cd JUCE
            git checkout 7.0.12
            cd ..
          }

          # Build Projucer if not cached
          if (!(Test-Path "JUCE/extras/Projucer/Builds/VisualStudio2022/x64/Release/Projucer.exe")) {
            cd JUCE/extras/Projucer/Builds/VisualStudio2022
            msbuild Projucer.sln /p:Configuration=Release /p:Platform=x64
            cd ..
            cd ..
          }

          # Generate Visual Studio project with Projucer
          ./JUCE/extras/Projucer/Builds/VisualStudio2022/x64/Release/Projucer.exe --resave Pulse24Sync.jucer

          # Build the project
          msbuild Builds/VisualStudio2022/Pulse24Sync.sln /p:Configuration=Release /p:Platform=x64

      - name: Upload Windows build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-builds
          path: Builds/VisualStudio2022/x64/Release/
