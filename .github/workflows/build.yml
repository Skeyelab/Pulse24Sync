name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-macos:
    runs-on: macOS
    if: false  # Disabled - set to true to enable

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Cache JUCE
      uses: actions/cache@v4
      with:
        path: |
          JUCE
          ~/Library/Caches/com.juce.Projucer
        key: ${{ runner.os }}-juce-${{ hashFiles('**/Pulse24Sync.jucer') }}
        restore-keys: |
          ${{ runner.os }}-juce-

    - name: Setup JUCE and Projucer
      run: |
        # Download JUCE if not cached
        if [ ! -d "JUCE" ]; then
          git clone https://github.com/juce-framework/JUCE.git
          cd JUCE
          git checkout 7.0.12
          cd ..
        fi

        # Build Projucer if not already built
        if [ ! -f "JUCE/extras/Projucer/Builds/MacOSX/build/Release/Projucer.app/Contents/MacOS/Projucer" ]; then
          cd JUCE
          cd extras/Projucer/Builds/MacOSX
          xcodebuild -project Projucer.xcodeproj -configuration Release
          cd ../../..
        fi

    - name: Build macOS with Projucer
      run: |
        # Generate Xcode project using full path to Projucer
        ./JUCE/extras/Projucer/Builds/MacOSX/build/Release/Projucer.app/Contents/MacOS/Projucer --resave Pulse24Sync.jucer

        # Build the project
        cd Builds/MacOSX
        xcodebuild -project Pulse24Sync.xcodeproj -configuration Release -target "Pulse24Sync - VST3" -target "Pulse24Sync - AU"

    - name: Upload macOS build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: macos-builds
        path: |
          Builds/MacOSX/build/Release/
          ~/Library/Audio/Plug-Ins/Components/Pulse24Sync.component
          ~/Library/Audio/Plug-Ins/VST3/Pulse24Sync.vst3
        retention-days: 7

  build-windows:
    runs-on: windows-latest
    if: false  # Disabled - set to true to enable

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Cache JUCE
      uses: actions/cache@v4
      with:
        path: |
          JUCE
          ${{ env.LOCALAPPDATA }}\JUCE
        key: ${{ runner.os }}-juce-${{ hashFiles('**/Pulse24Sync.jucer') }}
        restore-keys: |
          ${{ runner.os }}-juce-

    - name: Setup JUCE and Projucer
      run: |
        # Download JUCE if not cached
        if (!(Test-Path "JUCE")) {
          git clone https://github.com/juce-framework/JUCE.git
          cd JUCE
          git checkout 7.0.12
          cd ..
        }

        # Build Projucer if not already built
        if (!(Test-Path "JUCE\extras\Projucer\Builds\VisualStudio2022\x64\Release\App\Projucer.exe")) {
          cd JUCE
          cd extras\Projucer\Builds\VisualStudio2022
          msbuild Projucer.sln /p:Configuration=Release /p:Platform=x64
          cd ..\..\..
        }

    - name: Build Windows with Projucer
      run: |
        # Generate Visual Studio project using Projucer
        .\JUCE\extras\Projucer\Builds\VisualStudio2022\x64\Release\App\Projucer.exe --resave Pulse24Sync.jucer

        # Build the project
        cd Builds\VisualStudio2022
        msbuild Pulse24Sync.sln /p:Configuration=Release /p:Platform=x64

    - name: Upload Windows build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-builds
        path: |
          Builds/VisualStudio2022/x64/Release/
        retention-days: 7

  build-linux:
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Cache JUCE and dependencies
      uses: actions/cache@v4
      with:
        path: |
          JUCE
          ~/.cache/juce
          /usr/local/lib
          /usr/local/include
        key: ${{ runner.os }}-juce-deps-${{ hashFiles('**/Pulse24Sync.jucer') }}
        restore-keys: |
          ${{ runner.os }}-juce-deps-

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake libasound2-dev libjack-jackd2-dev \
          libfreetype6-dev libcurl4-openssl-dev libwebkit2gtk-4.1-dev libgtk-3-dev \
          libx11-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev

    - name: Debug cache and paths
      run: |
        echo "=== Cache status ==="
        echo "JUCE directory exists: $(if [ -d "JUCE" ]; then echo "YES"; else echo "NO"; fi)"
        echo "Projucer exists: $(if [ -f "JUCE/extras/Projucer/Builds/LinuxMakefile/build/Projucer" ]; then echo "YES"; else echo "NO"; fi)"
        echo "=== Current directory ==="
        pwd
        echo "=== Directory listing ==="
        ls -la
        echo "=== JUCE directory ==="
        if [ -d "JUCE" ]; then
          ls -la JUCE/
          echo "=== JUCE modules directory ==="
          ls -la JUCE/modules/
        else
          echo "JUCE directory not found"
        fi

    - name: Setup JUCE and Projucer
      run: |
        # Download JUCE if not cached
        if [ ! -d "JUCE" ]; then
          echo "Cloning JUCE..."
          git clone https://github.com/juce-framework/JUCE.git
          cd JUCE
          git checkout 7.0.12
          cd ..
        else
          echo "JUCE already exists (cached)"
        fi

        # Build Projucer if not already built
        if [ ! -f "JUCE/extras/Projucer/Builds/LinuxMakefile/build/Projucer" ]; then
          echo "Building Projucer..."
          cd JUCE
          cd extras/Projucer/Builds/LinuxMakefile
          make -j$(nproc)
          cd ../../..
        else
          echo "Projucer already built (cached)"
        fi

    - name: Build Linux with Projucer
      run: |
        # Generate Makefile project using Projucer
        ./JUCE/extras/Projucer/Builds/LinuxMakefile/build/Projucer --resave Pulse24Sync.jucer

        # Build the project
        cd Builds/LinuxMakefile
        make -j$(nproc)

    - name: Upload Linux build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: linux-builds
        path: |
          Builds/LinuxMakefile/build/
        retention-days: 7
